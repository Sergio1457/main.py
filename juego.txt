#pgzero
import random

#celdas
cell = Actor('pierdra')
cell1 = Actor('piso')
cell2 = Actor('pisomad')
cell3 = Actor('ladri')

size_w = 10 # Anchura del campo en celdas
size_h = 11 # Altura del campo en celdas

WIDTH = cell.width * size_w
HEIGHT = cell.height * size_h

TITLE = "Mazmorras" # Título de su proyecto de juego
FPS = 30 # Número de fotogramas por segundo

my_map = [[0,0,0,0,0,0,0,0,0,0],
          [0,1,2,1,2,2,1,2,1,0],
          [0,1,1,2,1,1,3,1,2,0],
          [0,3,2,1,1,2,2,1,3,0],
          [0,1,1,1,1,1,2,1,3,0],
          [0,1,3,1,1,1,1,2,3,0],
          [0,1,2,1,1,2,3,1,1,0],
          [0,1,2,1,1,1,3,1,2,0],
          [0,1,1,2,1,2,3,1,2,0],
          [0,0,0,0,0,0,0,0,0,0],
          [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]]
          
#personaje/enemigos
char = Actor('right')
char.top = cell.height
char.left = cell.width
char.health = 100
char.attack = 5
game = 'game'

# Generando enemigos
cantenemi = random.randint(1,10)
enemies = []
for i in range(cantenemi):
    al = random.randint(1,3)
    if al == 1:
        x = random.randint(1, 7) * cell.width
        y = random.randint(1, 7) * cell.height
        enemy = Actor("araña", topleft = (x, y))
        enemy.health = random.randint(10, 20)
        enemy.attack = random.randint(5, 10)
        enemies.append(enemy)
    if al == 2:
        x = random.randint(1, 7) * cell.width
        y = random.randint(1, 7) * cell.height
        enemy = Actor("mounstor", topleft = (x, y))
        enemy.health = random.randint(10, 20)
        enemy.attack = random.randint(5, 10)
        enemies.append(enemy)
    if al == 3:
        x = random.randint(1, 7) * cell.width
        y = random.randint(1, 7) * cell.height
        enemy = Actor("fantasma", topleft = (x, y))
        enemy.health = random.randint(10, 20)
        enemy.attack = random.randint(5, 10)
        enemies.append(enemy)

def map_draw():
    for i in range(len(my_map)):
        for j in range(len(my_map[0])):
            if my_map[i][j] == 0:
                cell.left = cell.width * j
                cell.top = cell.height * i
                cell.draw()
            elif my_map[i][j] == 1:
                cell1.left = cell.width * j
                cell1.top = cell.height * i
                cell1.draw()
            elif my_map[i][j] == 2:
                cell2.left = cell.width * j
                cell2.top = cell.height * i
                cell2.draw()
            elif my_map[i][j] == 3:
                cell3.left = cell.width * j
                cell3.top = cell.height * i
                cell3.draw()
                
def draw():
    if mode == 'game':
        screen.fill("#2f3542")
        map_draw()
        char.draw()
        screen.draw.text("HP:", center=(25, 675), color = 'white', fontsize = 20)
        screen.draw.text(char.health, center=(75, 675), color = 'white', fontsize = 20)
        screen.draw.text("AP:", center=(375, 675), color = 'white', fontsize = 20)
        screen.draw.text(char.attack, center=(425, 675), color = 'white', fontsize = 20)
        for i in range(len(enemies)):
            enemies[i].draw()
    elif mode == 'end':
        screen.draw.text("GAME OVER", center=(150, 150), color = 'white', fontsize = 26)
    
def on_key_down(key):
    old_x = char.x
    old_y = char.y
    if (keyboard.right or keyboard.d) and char.x + cell.width < WIDTH - cell.width:
        char.x += cell.width
        char.image = 'right'
    elif (keyboard.left or keyboard.a) and char.x - cell.width > cell.width:
        char.x -= cell.width
        char.image = 'left'
    elif (keyboard.down or keyboard.s) and char.y + cell.height < HEIGHT - cell.height:
        char.y += cell.height
        char.image = 'down'
    elif (keyboard.up or keyboard.w) and char.y - cell.height > cell.height:
        char.y -= cell.height
        char.image = 'up'
    
    enemy_index = char.collidelist(enemies)
    if enemy_index != -1:
        char.x = old_x
        char.y = old_y
        enemy = enemies[enemy_index]
        enemy.health -= char.attack
        char.health -= enemy.attack
        
        if enemy.health <= 0:
            enemies.pop(enemy_index)